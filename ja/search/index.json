[{"content":"Shell Script to Update Cloudflare Ddns Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 #!/bin/bash ############## User Configuration ############### # Define programme path # location_path=\u0026#34;/config/scripts/ddns\u0026#34; location_path=$(dirname -- \u0026#34;$0\u0026#34;) # You Registered CloudFlare Mail Account auth_email=\u0026#34;\u0026#34; # CloudFlare Global API Key auth_key=\u0026#34;\u0026#34; # Root Doman Name zone_name=\u0026#34;\u0026#34; # IP Type，Enter \u0026#39;ipv4\u0026#39; or \u0026#39;ipv6\u0026#39; ,at here we got paramter from our input type=$1 # DDNS Domain Name record_name=$2 # WAN INTERFACE INTERFACE=\u0026#34;\u0026#34; ############# Script ############ # The before WAN IP ip_file=\u0026#34;$location_path/$1_$2_ip.txt\u0026#34; # Domain id information # Domain id information id_file=\u0026#34;$location_path/$1_$2_cloudflare.ids\u0026#34; # Log location log_file=\u0026#34;$location_path/cloudflare.log\u0026#34; ################ Don\u0026#39;t change here ############### ################## Function #################### record_type=\u0026#34;\u0026#34; ip=\u0026#34;\u0026#34; zone_identifier=\u0026#34;\u0026#34; record_identifier=\u0026#34;\u0026#34; update=\u0026#34;\u0026#34; # Log function log() { if [ \u0026#34;$1\u0026#34; ]; then echo -e \u0026#34;[$(date)] - $1\u0026#34; \u0026gt;\u0026gt; $log_file fi } #To get local IP address get_ip() { if [ $type == \u0026#34;ipv4\u0026#34; ]; then record_type=\u0026#34;A\u0026#34; ip=$(ip addr | grep ${INTERFACE} -A2 | grep inet | grep -v inet6 | awk \u0026#39;{print $2}\u0026#39;) elif [ $type == \u0026#34;ipv6\u0026#34; ]; then record_type=\u0026#34;AAAA\u0026#34; ip=$(ip addr | grep ${INTERFACE} -A2 | grep inet6 | awk \u0026#39;{print $2}\u0026#39; | cut -d \u0026#39;/\u0026#39; -f1) else echo \u0026#34;Type wrong\u0026#34; log \u0026#34;Type wrong\u0026#34; exit 0 fi } # Check IP changed or not, if there\u0026#39;s no change, then terminal programme check_ip_change() { if [ -f $ip_file ]; then old_ip=$(cat $ip_file) if [ \u0026#34;$ip\u0026#34; == \u0026#34;$old_ip\u0026#34; ]; then echo \u0026#34;IP has not changed.\u0026#34; log \u0026#34;IP has not changed.\u0026#34; exit 0 fi fi } #Get zone_id subdomain ID get_id() { if [ -f $id_file ] \u0026amp;\u0026amp; [ $(wc -l $id_file | cut -d \u0026#34; \u0026#34; -f 1) == 2 ]; then zone_identifier=$(head -1 $id_file) record_identifier=$(tail -1 $id_file) else zone_identifier=$(curl -s -X GET \u0026#34;https://api.cloudflare.com/client/v4/zones?name=$zone_name\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34; | grep -Po \u0026#39;(?\u0026lt;=\u0026#34;id\u0026#34;:\u0026#34;)[^\u0026#34;]*\u0026#39; | head -1 ) rec_response_json=`curl -X GET \u0026#34;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?name=$record_name\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34;` record_identifier=`echo $rec_response_json | grep -Po \u0026#39;(?\u0026lt;=\u0026#34;id\u0026#34;:\u0026#34;)[^\u0026#34;]*\u0026#39;` echo \u0026#34;$zone_identifier\u0026#34; \u0026gt; $id_file echo \u0026#34;$record_identifier\u0026#34; \u0026gt;\u0026gt; $id_file fi } #Update DNS record update_dns() { update=$(curl -s -X PUT \u0026#34;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34; --data \u0026#34;{\\\u0026#34;id\\\u0026#34;:\\\u0026#34;$zone_identifier\\\u0026#34;,\\\u0026#34;type\\\u0026#34;:\\\u0026#34;$record_type\\\u0026#34;,\\\u0026#34;name\\\u0026#34;:\\\u0026#34;$record_name\\\u0026#34;,\\\u0026#34;content\\\u0026#34;:\\\u0026#34;$ip\\\u0026#34;}\u0026#34;) } ################### Main ################### log \u0026#34;Script start.\u0026#34; #Got IP Address get_ip # Check got the right ip address if [ \u0026#34;$ip\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get IP address.Please check your network connection.\u0026#34; log \u0026#34;Can not get IP address.Please check your network connection.\u0026#34; exit 0 fi # Check IP changed or not check_ip_change # Get zone_id and sumdomain record ID get_id # Check get ID successfully or not if [ \u0026#34;$zone_identifier\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get zone_id.\u0026#34; log \u0026#34;Can not get zone_id.\u0026#34; exit 0 elif [ \u0026#34;$record_identifier\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get record_id.\u0026#34; log \u0026#34;Can not get record_id.\u0026#34; exit 0 fi # Update DNS Record update_dns # Check DNS record updated or not if [[ $update == *\u0026#34;\\\u0026#34;success\\\u0026#34;:false\u0026#34;* ]]; then log \u0026#34;API UPDATE FAILED. DUMPING RESULTS:\\n$update\u0026#34; echo -e \u0026#34;API UPDATE FAILED. DUMPING RESULTS:\\n$update\u0026#34; exit 0 else echo \u0026#34;$ip\u0026#34; \u0026gt; $ip_file log \u0026#34;$record_name IP changed to: $ip\u0026#34; echo \u0026#34;$record_name IP changed to: $ip\u0026#34; fi How to run the script 1 2 3 4 5 #update A record sudo bash /config/scripts/ddns/cloudflare-ddns.sh ipv4 \u0026lt;MY_DOMAIN_NAME\u0026gt; #update AAAA record sudo bash /config/scripts/ddns/cloudflare-ddns.sh ipv6 \u0026lt;MY_DOMAIN_NAME\u0026gt; ","date":"2022-10-09T09:50:14+08:00","image":"https://picsum.photos/800/600.webp?random=7257319e","permalink":"https://echowings.github.io/ja/p/shell-script-to-update-cloudflare-ddns/","title":"Shell Script to Update Cloudflare Ddns"},{"content":"VyOS で API サービスを有効にする方法 最近になって、ネットワーク ステータスを自動検出し、いくつかの設定を自動的に変更する vyos シェル スクリプトを作成しました。 途中で、直接ロードするための新しい構成があり、構成モードをより長く保持します。 これは賢明な方法ではありません。\n別のより良いオプションとして、API を使用して vyos の設定を変更できるとしたらどうでしょうか?\nAPI https サービスをローカルで有効にする ソケットモードで apt サービスを有効にする 1 set service https api socket テスト設定 1 curl --unix-socket /run/api.sock -X POST -Fkey=qwerty -Fdata=\u0026#39;{\u0026#34;op\u0026#34;: \u0026#34;showConfig\u0026#34;, \u0026#34;path\u0026#34;: []}\u0026#39; http://localhost/retrieve Let\u0026rsquo;s暗号化フリーsslでapi httpsサービスを有効にする 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #!/bin/vbash source /opt/vyatta/etc/functions/script-template configure # 変数の定義 ID=\u0026#34;my_id\u0026#34; APIKEY=\u0026#34;12345\u0026#34; APIPORT=\u0026#34;1234\u0026#34; VHOST=\u0026#34;myvps\u0026#34; FULL_FQDN=\u0026#34;xxx.xxx.xxx\u0026#34; LISTEN_ADDRESS=\u0026#34;IP ADDRESS\u0026#34; EMAIL=\u0026#34;my@emal.com\u0026#34; set service https api key id $ID key $APIKEY set service https certificates certbot domain-name $FULL_FQDN set service https certificates certbot email $EMAIL set service https api strict set service https virtual-host $VHOST listen-address $LISTEN_ADDRESS set service https virtual-host $VHOST listen-port $APIPORT set service https virtual-host $VHOST server-name $FULL_FQDN commit save exit ","date":"2022-04-26T00:17:15+08:00","image":"https://picsum.photos/800/600.webp?random=71ff97d5","permalink":"https://echowings.github.io/ja/p/how-to-enable-http-api-service-on-vyos/","title":"VyOS で API サービスを有効にする方法"}]