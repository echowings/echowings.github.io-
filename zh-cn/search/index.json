[{"content":"更改Debian 12的apt安装源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #备份 /et/apt/source.list cp /etc/apt/sources.list /etc/apt/sources.list-bak #选项 1: 使用官方debian 12 源 tee /etc/apt/sources.list \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; deb http://deb.debian.org/debian bookworm main non-free-firmware deb-src http://deb.debian.org/debian bookworm main non-free-firmware deb http://deb.debian.org/debian-security/ bookworm-security main non-free-firmware deb-src http://deb.debian.org/debian-security/ bookworm-security main non-free-firmware deb http://deb.debian.org/debian bookworm-updates main non-free-firmware deb-src http://deb.debian.org/debian bookworm-updates main non-free-firmware EOF #选项 2:使用中科大mirrors.utsc.edu.cn源 # Downlaod and Install debian 12 sourcelist curl -fsSL https://mirrors.ustc.edu.cn/repogen/conf/debian-https-4-bookworm -o /etc/apt/sources.list apt update \u0026amp;\u0026amp; apt -y dist-upgrade apt install -y neovim net-tools 网卡更名，把网卡名字还原为ethx(可选操作) 1 2 3 4 5 6 7 8 9 10 11 12 13 export PATH=$PATH:/usr/sbin:/home/$(whoami)/.local/bin echo \u0026#34;export PATH=$PATH:/usr/sbin:/home/$(whoami)/.local/bin\u0026#34; \u0026gt;\u0026gt; ~/.bashrc cp /etc/default/grub /etc/default/grub-bak sed -i \u0026#39;/GRUB_CMDLINE_LINUX=/s/\u0026#34;$/net.ifnames=0 biosdevname=0\u0026#34;/\u0026#39; /etc/default/grub #更改网卡名字 enp2s0 更改为eth0，根据你实际网卡名字更改 sed -i \u0026#39;s/enp2s0/eth0/\u0026#39; /etc/network/interfaces update-grub # 重启系统生效 systemctl reboot 更改hosts文件的hostname 1 2 3 4 5 6 ipv4_addr=$(ip -4 route get 8.8.8.8 | awk {\u0026#39;print $7\u0026#39;} | tr -d \u0026#39;\\n\u0026#39;) echo $ipv4_addr sed -i \u0026#34;s/127.0.1.1/${ipv4_addr}/g\u0026#34; /etc/hosts cat /etc/hosts hostname --ip-address 更换PVE Sourcelist 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #可选操作，2选1 #选项 1: PVE官方sourcelist tee /etc/apt/sources.list.d/pve-install-repo.list \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription EOF # 选项2: 中科大国内镜像 tee /etc/apt/sources.list.d/pve-install-repo.list \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; deb [arch=amd64] https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription EOF #安装gpg密钥 #如下操作2选1 #选项 1: 官方站点 wget http://download.proxmox.com/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg #选项2: 中科大镜像 wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg #Ceph源更改 #二选一 #选项 1: pve官方源 echo \u0026#34;deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription\u0026#34; \u0026gt; /etc/apt/sources.list.d/ceph.list #选项 2: 中科大国内镜像 echo \u0026#34;deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription\u0026#34; \u0026gt; /etc/apt/sources.list.d/ceph.list # 更新并安装 apt update \u0026amp;\u0026amp; apt -y full-upgrade # Install proxmxo ve kernel apt install pve-kernel-6.2 # 重启系统 systemctl reboot 安装proxmox ve软件包 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # 安装proxmox ve 软件包 apt install -y proxmox-ve postfix open-iscsi #移除debian 12的内核 apt remove linux-image-amd64 \u0026#39;linux-image-6.1*\u0026#39; update-grub # 移除 OS-PROBER apt remove -y os-prober # 关闭登录pve 未订阅提醒对话框 sed -Ezi.bak \u0026#34;s/(Ext.Msg.show\\(\\{\\s+title: gettext\\(\u0026#39;No valid sub)/void\\(\\{ \\/\\/\\1/g\u0026#34; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js \u0026amp;\u0026amp; systemctl restart pveproxy.service # 删除pve 企业源 rm -f /etc/apt/sources.list.d/pve-enterprise.list # 安装 openvswitch-switch apt install -y openvswitch-switch 更改中科大 lxc模板源 1 2 cp /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm_back sed -i \u0026#39;s|http://download.proxmox.com|https://mirrors.ustc.edu.cn/proxmox|g\u0026#39; /usr/share/perl5/PVE/APLInfo.pm 参考文档 Install Proxmox VE on Debian 12 Bookworm Debian SourcesList ","date":"2023-06-24T18:17:00+08:00","image":"https://picsum.photos/800/600.webp?random=aa27590c","permalink":"https://echowings.github.io/zh-cn/p/%E5%A6%82%E4%BD%95%E5%9C%A8debian-12%E4%B8%8A%E5%AE%89%E8%A3%85proxmox-ve-8/","title":"如何在Debian 12上安装Proxmox VE 8"},{"content":"Dockerfile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 FROM debian:bullseye-slim LABEL maintainer=\u0026#34;Steve Dong \u0026lt;dongjunbo@gmail.com\u0026gt;\u0026#34; ENV NGINX_VERSION 1.23.3 ENV OPENSSL_VERSION 1.1.1t RUN set -x \\ \u0026amp;\u0026amp; apt-get update \\ \u0026amp;\u0026amp; apt-get install --no-install-recommends --no-install-suggests -y \\ gnupg1 apt-transport-https ca-certificates libpcre3 zlib1g \\ build-essential wget libpcre3-dev zlib1g-dev \\ \u0026amp;\u0026amp; wget -O - https://www.openssl.org/source/openssl-\u0026#34;$OPENSSL_VERSION\u0026#34;.tar.gz | tar -xzf - -C /tmp \\ \u0026amp;\u0026amp; wget -O - http://nginx.org/download/nginx-\u0026#34;$NGINX_VERSION\u0026#34;.tar.gz | tar -xzf - -C /tmp \\ \u0026amp;\u0026amp; cd /tmp/nginx-\u0026#34;$NGINX_VERSION\u0026#34; \\ \u0026amp;\u0026amp; ./configure \\ --prefix=/etc/nginx \\ --sbin-path=/usr/sbin/nginx \\ --modules-path=/usr/lib64/nginx/modules \\ --conf-path=/etc/nginx/nginx.conf \\ --error-log-path=/var/log/nginx/error.log \\ --http-log-path=/var/log/nginx/access.log \\ --pid-path=/var/run/nginx.pid \\ --lock-path=/var/run/nginx.lock \\ --http-client-body-temp-path=/var/cache/nginx/client_temp \\ --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\ --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\ --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\ --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\ --user=nginx \\ --group=nginx \\ --with-file-aio \\ --with-threads \\ --with-ipv6 \\ --with-http_addition_module \\ --with-http_auth_request_module \\ --with-http_dav_module \\ --with-http_flv_module \\ --with-http_gunzip_module \\ --with-http_gzip_static_module \\ --with-http_mp4_module \\ --with-http_random_index_module \\ --with-http_realip_module \\ --with-http_secure_link_module \\ --with-http_slice_module \\ --with-http_ssl_module \\ --with-http_stub_status_module \\ --with-http_sub_module \\ --with-http_v2_module \\ --with-mail \\ --with-mail_ssl_module \\ --with-stream \\ --with-stream_ssl_module \\ --with-openssl=/tmp/openssl-\u0026#34;$OPENSSL_VERSION\u0026#34; --with-openssl-opt=enable-weak-ssl-ciphers \\ --with-cc-opt=\u0026#39;-O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic\u0026#39; \\ \u0026amp;\u0026amp; \\ make \\ \u0026amp;\u0026amp; cd /tmp/nginx-\u0026#34;$NGINX_VERSION\u0026#34; \\ \u0026amp;\u0026amp; groupadd -r nginx \\ \u0026amp;\u0026amp; useradd -r -g nginx nginx \\ \u0026amp;\u0026amp; make install \\ \u0026amp;\u0026amp; mkdir /var/cache/nginx \\ \u0026amp;\u0026amp; chown nginx:root /var/cache/nginx \\ \u0026amp;\u0026amp; chown -R nginx:root /var/log/nginx \\ \u0026amp;\u0026amp; apt-get purge -y build-essential wget libpcre3-dev zlib1g-dev \\ \u0026amp;\u0026amp; ln -sf /dev/stdout /var/log/nginx/access.log \\ \u0026amp;\u0026amp; ln -sf /dev/stderr /var/log/nginx/error.log \\ \u0026amp;\u0026amp; rm -rf /tmp/*.tar.gz /tmp/nginx-* /tmp/openssl-* \\ \u0026amp;\u0026amp; apt-get -f -y autoremove EXPOSE 80 443 STOPSIGNAL SIGTERM CMD [\u0026#34;nginx\u0026#34;, \u0026#34;-g\u0026#34;, \u0026#34;daemon off;\u0026#34;] ","date":"2023-02-15T08:46:43+08:00","image":"https://picsum.photos/800/600.webp?random=0217b741","permalink":"https://echowings.github.io/zh-cn/p/%E5%A6%82%E4%BD%95%E4%BB%8E%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E6%9E%84%E5%BB%BAnginx-docker%E9%95%9C%E5%83%8F%E5%B9%B6%E5%90%AF%E7%94%A8weak-cipher%E9%80%89%E9%A1%B9/","title":"如何从源码安装构建nginx docker镜像并启用weak cipher选项"},{"content":"01.shell Shell 脚本的建立和执行 脚本第一行指定脚本的解释器 1 #!/bin/bash source script-name 或者\u0026quot;.\u0026ldquo;读入或加载知道那个的 shell 脚本文件\nshell 脚本的变量继承关系 使用 shell 脚本来加载脚本中的变量，使用 source ./file 或者. ./file来加载。直接使用 sh 来执行是无法加载的。原因是 sh file 启动了新的 shell 来执行脚本，当执行结束，新的 shell 退出导致变量无法被继承下来。使用 source 或者.来运行程序，是在当前 shell 中运行，所以脚本中的变量是可以被继承下来的。\nshell 编程归还 shell 脚本的第一行指定脚本解释器 1 #!/bin/bash 或者\n1 #!/bin/sh shell 脚本开头加上版本、版权等信息： 1 2 3 4 5 # Date: 17:25 CST 2023-2-3 # Author: Create by Steve Dong # Blog: https://echowings.github.io # Description: This scriptes funciton is ... # Version 1.0 环境变量初始化与对应文件的生效顺序 通过系统用户登录后默认运行的 shell graph TD A[ /etc/profile ] --\u003e B( /etc/profile.d ) B --\u003e C[ $HOME/.bash_profile ] C --\u003e D[ $HOME/.bashrc ] D --\u003e E[ /etc/bashrc ] 非登录交互运行的 shell 执行脚本运行非交互式 shell graph TD A[ $HOME/.bashrc ] --\u003e B[ /etc/bashrc ] ","date":"2023-02-04T08:43:35+08:00","image":"https://picsum.photos/800/600.webp?random=bcffb920","permalink":"https://echowings.github.io/zh-cn/p/shell%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0-01/","title":"Shell编程学习 01"},{"content":"How to Install SSHPASS on VyOS 1.3.x how-to-install-sshpass-on- vyos-1.3.x Since vyos 1.3.x base on debian 10, so we can install sshpass 1.06 for debian on vyos 1.3.x\nDownload and install sshpass 1.06 for debian 10 1 2 3 wget http://ftp.de.debian.org/debian/pool/main/s/sshpass/sshpass_1.06-1_amd64.deb sudo dpkg -i sshpass_1.06-1_amd64.deb Run sshpass 1 2 3 4 5 6 7 8 9 10 11 12 13 # run command via ssh without inactively sshpass -p \u0026#39;ssh_password\u0026#39; ssh -t root@ssh_host -p 22 \u0026#39;uptime\u0026#39; # Copy files to remote sshpass -p \u0026#39;ssh_password\u0026#39; scp -P 22 myfile.txt gcadmin@ssh_host # loop running command for i in 192.168.11.5{1..3};do sshpass -p \u0026#39;ssh_password\u0026#39; ssh -t root@$i -p 22 \u0026#39;uptime\u0026#39;;done # Loop copy files for i in host1 host2 host3;do echo $i \u0026amp;\u0026amp; sshpass -p \u0026#39;ssh_password\u0026#39; scp -P 22 myfile.txt gcadmin@$i;done ","date":"2022-11-14T09:09:33+08:00","image":"https://picsum.photos/800/600.webp?random=81ff83c3","permalink":"https://echowings.github.io/zh-cn/p/how-to-install-sshpass-on-vyos-1.3.x/","title":"How to Install Sshpass on Vyos 1.3.x"},{"content":"Shell Script to Update Cloudflare Ddns Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 #!/bin/bash ############## User Configuration ############### # Define programme path # location_path=\u0026#34;/config/scripts/ddns\u0026#34; location_path=$(dirname -- \u0026#34;$0\u0026#34;) # You Registered CloudFlare Mail Account auth_email=\u0026#34;\u0026#34; # CloudFlare Global API Key auth_key=\u0026#34;\u0026#34; # Root Doman Name zone_name=\u0026#34;\u0026#34; # IP Type，Enter \u0026#39;ipv4\u0026#39; or \u0026#39;ipv6\u0026#39; ,at here we got paramter from our input type=$1 # DDNS Domain Name record_name=$2 # WAN INTERFACE INTERFACE=\u0026#34;\u0026#34; ############# Script ############ # The before WAN IP ip_file=\u0026#34;$location_path/$1_$2_ip.txt\u0026#34; # Domain id information # Domain id information id_file=\u0026#34;$location_path/$1_$2_cloudflare.ids\u0026#34; # Log location log_file=\u0026#34;$location_path/cloudflare.log\u0026#34; ################ Don\u0026#39;t change here ############### ################## Function #################### record_type=\u0026#34;\u0026#34; ip=\u0026#34;\u0026#34; zone_identifier=\u0026#34;\u0026#34; record_identifier=\u0026#34;\u0026#34; update=\u0026#34;\u0026#34; # Log function log() { if [ \u0026#34;$1\u0026#34; ]; then echo -e \u0026#34;[$(date)] - $1\u0026#34; \u0026gt;\u0026gt; $log_file fi } #To get local IP address get_ip() { if [ $type == \u0026#34;ipv4\u0026#34; ]; then record_type=\u0026#34;A\u0026#34; ip=$(ip addr | grep ${INTERFACE} -A2 | grep inet | grep -v inet6 | awk \u0026#39;{print $2}\u0026#39;) elif [ $type == \u0026#34;ipv6\u0026#34; ]; then record_type=\u0026#34;AAAA\u0026#34; ip=$(ip addr | grep ${INTERFACE} -A2 | grep inet6 | awk \u0026#39;{print $2}\u0026#39; | cut -d \u0026#39;/\u0026#39; -f1) else echo \u0026#34;Type wrong\u0026#34; log \u0026#34;Type wrong\u0026#34; exit 0 fi } # Check IP changed or not, if there\u0026#39;s no change, then terminal programme check_ip_change() { if [ -f $ip_file ]; then old_ip=$(cat $ip_file) if [ \u0026#34;$ip\u0026#34; == \u0026#34;$old_ip\u0026#34; ]; then echo \u0026#34;IP has not changed.\u0026#34; log \u0026#34;IP has not changed.\u0026#34; exit 0 fi fi } #Get zone_id subdomain ID get_id() { if [ -f $id_file ] \u0026amp;\u0026amp; [ $(wc -l $id_file | cut -d \u0026#34; \u0026#34; -f 1) == 2 ]; then zone_identifier=$(head -1 $id_file) record_identifier=$(tail -1 $id_file) else zone_identifier=$(curl -s -X GET \u0026#34;https://api.cloudflare.com/client/v4/zones?name=$zone_name\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34; | grep -Po \u0026#39;(?\u0026lt;=\u0026#34;id\u0026#34;:\u0026#34;)[^\u0026#34;]*\u0026#39; | head -1 ) rec_response_json=`curl -X GET \u0026#34;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?name=$record_name\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34;` record_identifier=`echo $rec_response_json | grep -Po \u0026#39;(?\u0026lt;=\u0026#34;id\u0026#34;:\u0026#34;)[^\u0026#34;]*\u0026#39;` echo \u0026#34;$zone_identifier\u0026#34; \u0026gt; $id_file echo \u0026#34;$record_identifier\u0026#34; \u0026gt;\u0026gt; $id_file fi } #Update DNS record update_dns() { update=$(curl -s -X PUT \u0026#34;https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier\u0026#34; -H \u0026#34;X-Auth-Email: $auth_email\u0026#34; -H \u0026#34;X-Auth-Key: $auth_key\u0026#34; -H \u0026#34;Content-Type: application/json\u0026#34; --data \u0026#34;{\\\u0026#34;id\\\u0026#34;:\\\u0026#34;$zone_identifier\\\u0026#34;,\\\u0026#34;type\\\u0026#34;:\\\u0026#34;$record_type\\\u0026#34;,\\\u0026#34;name\\\u0026#34;:\\\u0026#34;$record_name\\\u0026#34;,\\\u0026#34;content\\\u0026#34;:\\\u0026#34;$ip\\\u0026#34;}\u0026#34;) } ################### Main ################### log \u0026#34;Script start.\u0026#34; #Got IP Address get_ip # Check got the right ip address if [ \u0026#34;$ip\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get IP address.Please check your network connection.\u0026#34; log \u0026#34;Can not get IP address.Please check your network connection.\u0026#34; exit 0 fi # Check IP changed or not check_ip_change # Get zone_id and sumdomain record ID get_id # Check get ID successfully or not if [ \u0026#34;$zone_identifier\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get zone_id.\u0026#34; log \u0026#34;Can not get zone_id.\u0026#34; exit 0 elif [ \u0026#34;$record_identifier\u0026#34; == \u0026#34;\u0026#34; ]; then echo \u0026#34;Can not get record_id.\u0026#34; log \u0026#34;Can not get record_id.\u0026#34; exit 0 fi # Update DNS Record update_dns # Check DNS record updated or not if [[ $update == *\u0026#34;\\\u0026#34;success\\\u0026#34;:false\u0026#34;* ]]; then log \u0026#34;API UPDATE FAILED. DUMPING RESULTS:\\n$update\u0026#34; echo -e \u0026#34;API UPDATE FAILED. DUMPING RESULTS:\\n$update\u0026#34; exit 0 else echo \u0026#34;$ip\u0026#34; \u0026gt; $ip_file log \u0026#34;$record_name IP changed to: $ip\u0026#34; echo \u0026#34;$record_name IP changed to: $ip\u0026#34; fi How to run the script 1 2 3 4 5 #update A record sudo bash /config/scripts/ddns/cloudflare-ddns.sh ipv4 \u0026lt;MY_DOMAIN_NAME\u0026gt; #update AAAA record sudo bash /config/scripts/ddns/cloudflare-ddns.sh ipv6 \u0026lt;MY_DOMAIN_NAME\u0026gt; ","date":"2022-10-09T09:50:14+08:00","image":"https://picsum.photos/800/600.webp?random=7257319e","permalink":"https://echowings.github.io/zh-cn/p/shell-script-to-update-cloudflare-ddns/","title":"Shell Script to Update Cloudflare Ddns"},{"content":"如何在VyOS上启用api服务 最近，我写了些shell脚本来自动探测网络状态，并通过脚本来更改vyos的设置，但是如果意外断电或者强制重启会导致VyOS的配置文件丢失，非常的麻烦和不稳定。 如何解决这个问题呢？为什么不实施VyOS的API呢？\n在VyOS本机上启用api服务 socket模式启用api服务 1 set service https api socket curl测试 1 curl --unix-socket /run/api.sock -X POST -Fkey=qwerty -Fdata=\u0026#39;{\u0026#34;op\u0026#34;: \u0026#34;showConfig\u0026#34;, \u0026#34;path\u0026#34;: []}\u0026#39; http://localhost/retrieve 使用let‘s encryption的ssl启动VyOS API 服务 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #!/bin/vbash source /opt/vyatta/etc/functions/script-template configure # 定义变量 ID=\u0026#34;my_id\u0026#34; APIKEY=\u0026#34;12345\u0026#34; APIPORT=\u0026#34;1234\u0026#34; VHOST=\u0026#34;myvps\u0026#34; FULL_FQDN=\u0026#34;xxx.xxx.xxx\u0026#34; LISTEN_ADDRESS=\u0026#34;xxx.xxx.xxx.xxx\u0026#34; EMAIL=\u0026#34;my@emal.com\u0026#34; set service https api key id $ID key $APIKEY set service https certificates certbot domain-name $FULL_FQDN set service https certificates certbot email $EMAIL set service https api strict set service https virtual-host $VHOST listen-address $LISTEN_ADDRESS set service https virtual-host $VHOST listen-port $APIPORT set service https virtual-host $VHOST server-name $FULL_FQDN commit save exit ","date":"2022-04-26T00:17:15+08:00","image":"https://picsum.photos/800/600.webp?random=71ff97d5","permalink":"https://echowings.github.io/zh-cn/p/how-to-enable-http-api-service-on-vyos/","title":"如何在vyos上启用api服务"},{"content":"奥林岛财务软件在win7/win8/win10安装 安装32bit的Office Office 2007. office 2013、office 2016,office2 019的32bit版本皆可！不可装64bit版本office.\n下载注册Vsflex6.ocx 下载vsflex6.ocx 下载链接(下载任意一个即可) (1). Vsflex6.zip\n(2). Vsflex6.zip\n解压出来的文件Vsflex6.ocx，复制粘贴到c:/windows/system32/目录。\n管理员权限打开CMD.在如下图所示图标右键。在“CommandPrompt“点击右键。然后在弹出的菜单 ”Run as Administror”，单击打开。 如下图 复制粘贴并在打开管理员权限cmd里运行这个命令即可完成Vsflex6.ocx的注册.\n1 regsvr32 c:\\windows\\system32\\Vsflex6.ocx \u0026ndash;THE END\u0026ndash;\n","date":"2021-02-05T11:27:59+08:00","image":"https://echowings.github.io/zh-cn/p/post/2016-09-14_101553_hu7810971e8a628346888e63335bad77f5_88259_120x120_fill_q75_box_smart1.jpg","permalink":"https://echowings.github.io/zh-cn/p/post/","title":"奥林岛财务软件在win7/win8/win10安装"}]